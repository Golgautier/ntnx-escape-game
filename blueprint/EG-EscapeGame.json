{"status":{},"spec":{"name":"EG-EscapeGame","description":"Deploy escape game on a brand new HPOC. When deployed :\n - Game will be available on  http:\/\/@@{VM.address}@@:8080\n - Scoreboard will be available on http:\/\/@@{VM.address}@@:8080\/scoreboard","resources":{"service_definition_list":[{"name":"Game","description":"","variable_list":[{"type":"LOCAL","name":"TEMPLATES","description":"","options":{"type":"PREDEFINED","choices":[]},"is_hidden":false,"is_mandatory":false,"data_type":"BASE","val_type":"STRING","label":"","attrs":{"type":""},"value":""},{"type":"LOCAL","name":"RECIPIENTS_LIST","description":"","options":{"type":"PREDEFINED","choices":[]},"is_hidden":true,"is_mandatory":false,"data_type":"BASE","val_type":"STRING","label":"","attrs":{"type":""},"editables":{"value":false},"value":""},{"type":"LOCAL","name":"ProjectUUID","description":"","options":{"type":"PREDEFINED","choices":[]},"is_hidden":true,"is_mandatory":false,"data_type":"BASE","val_type":"STRING","label":"","attrs":{"type":""},"editables":{"value":false},"value":""},{"type":"LOCAL","name":"CLUSTERNAME","description":"","options":{"type":"PREDEFINED","choices":[]},"is_hidden":true,"is_mandatory":false,"data_type":"BASE","val_type":"STRING","label":"","attrs":{"type":"LOCAL"},"editables":{"value":false},"value":""},{"type":"LOCAL","name":"SECONDARY_SUBNET","description":"","options":{"type":"PREDEFINED","choices":[]},"is_hidden":true,"is_mandatory":false,"data_type":"BASE","val_type":"STRING","label":"","attrs":{"type":""},"editables":{"value":false},"value":""},{"type":"LOCAL","name":"PRIMARY_SUBNET","description":"","options":{"type":"PREDEFINED","choices":[]},"is_hidden":true,"is_mandatory":false,"data_type":"BASE","val_type":"STRING","label":"","attrs":{"type":""},"editables":{"value":false},"value":""}],"action_list":[{"type":"system","name":"action_create","description":"System action for creating an application","runbook":{"name":"dad83723_runbook","description":"","task_definition_list":[{"type":"DAG","name":"4c64493b_dag","description":"","attrs":{"type":"","edges":[{"type":"","from_task_reference":{"name":"Start dascboard server","kind":"app_task"},"to_task_reference":{"name":"Start WSSH","kind":"app_task"},"edge_type":"user_defined"}]},"child_tasks_local_reference_list":[{"name":"Start dascboard server","kind":"app_task"},{"name":"Start WSSH","kind":"app_task"}],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Start dascboard server","description":"","attrs":{"type":"","script":"#!\/bin\/bash\n\nsudo systemctl start eg-dashboard.service","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Start WSSH","description":"","attrs":{"type":"","script":"#!\/bin\/bash\n\nsudo systemctl start eg-sshserver.service","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]}],"main_task_local_reference":{"name":"4c64493b_dag","kind":"app_task"},"variable_list":[]},"critical":false},{"type":"system","name":"action_delete","description":"System action for deleting an application. Deletes created VMs as well","runbook":{"name":"ddb7e1ad_runbook","description":"","task_definition_list":[{"type":"DAG","name":"f989ad75_dag","description":"","attrs":{"type":"","edges":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]}],"main_task_local_reference":{"name":"f989ad75_dag","kind":"app_task"},"variable_list":[]},"critical":false},{"type":"system","name":"action_start","description":"System action for starting an application","runbook":{"name":"b0ce5efb_runbook","description":"","task_definition_list":[{"type":"DAG","name":"2dee7c99_dag","description":"","attrs":{"type":"","edges":[]},"child_tasks_local_reference_list":[{"name":"Add right to run_sh","kind":"app_task"}],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Add right to run_sh","description":"","attrs":{"type":"","script":"#!\/bin\/bash\n\ncd ntnx-escape-game\n\nchmod +x run.sh","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]}],"main_task_local_reference":{"name":"2dee7c99_dag","kind":"app_task"},"variable_list":[]},"critical":false},{"type":"system","name":"action_stop","description":"System action for stopping an application","runbook":{"name":"ef0c4356_runbook","description":"","task_definition_list":[{"type":"DAG","name":"46326b9f_dag","description":"","attrs":{"type":"","edges":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]}],"main_task_local_reference":{"name":"46326b9f_dag","kind":"app_task"},"variable_list":[]},"critical":false},{"type":"system","name":"action_restart","description":"System action for restarting an application","runbook":{"name":"053fc8c4_runbook","description":"","task_definition_list":[{"type":"DAG","name":"5385e724_dag","description":"","attrs":{"type":"","edges":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]}],"main_task_local_reference":{"name":"5385e724_dag","kind":"app_task"},"variable_list":[]},"critical":false}],"depends_on_list":[],"port_list":[],"singleton":false,"tier":""}],"published_service_definition_list":[],"substrate_definition_list":[{"type":"AHV_VM","name":"VM","description":"","variable_list":[],"action_list":[{"type":"fragment","name":"pre_action_create","description":"","runbook":{"name":"98026019_runbook","description":"","task_definition_list":[{"type":"DAG","name":"dda7a51c_dag","description":"","attrs":{"type":"","edges":[{"type":"","from_task_reference":{"name":"Check AD connection","kind":"app_task"},"to_task_reference":{"name":"Check Capa planing User","kind":"app_task"},"edge_type":"user_defined"}]},"child_tasks_local_reference_list":[{"name":"Check AD connection","kind":"app_task"},{"name":"Check Capa planing User","kind":"app_task"}],"variable_list":[],"target_any_local_reference":{"name":"VM","kind":"app_substrate"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Check AD connection","description":"","attrs":{"type":"","script":"dir C:\\","script_type":"npsscript","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"VM","kind":"app_substrate"},"exec_target_reference":{"name":"AD","kind":"app_endpoint"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Check Capa planing User","description":"","attrs":{"type":"","script":"#script\n\nimport requests \n\npc_ip='@@{OLDPC}@@'\npc_user='@@{OLDPC_USER}@@'\npc_pwd='@@{PLANNER_PASSWORD}@@'\n\nheaders = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\"\n}\n \nurl=\"https:\/\/%s:9440\/api\/nutanix\/v3\/vms\/list\" % pc_ip\n\npayload = {\n    \"kind\": \"vm\"\n}\n\nresponse = requests.post(url, json=payload, headers=headers, verify=False, auth=(pc_user, pc_pwd))\nresponse_data = json.loads(response.text)\n\nif response.ok:\n    print(\"Ok\")\n    exit(0)\nelse:\n    print(\"Planner password seems to be incorrect. Please delete this app, then redploy it with the good password.\")\n    exit(2)","script_type":"static_py3","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"VM","kind":"app_substrate"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]}],"main_task_local_reference":{"name":"dda7a51c_dag","kind":"app_task"},"variable_list":[]},"critical":false},{"type":"fragment","name":"post_action_create","description":"","runbook":{"name":"6f6e7a49_runbook","description":"","task_definition_list":[{"type":"DAG","name":"c0deb455_dag","description":"","attrs":{"type":"","edges":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"VM","kind":"app_substrate"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]}],"main_task_local_reference":{"name":"c0deb455_dag","kind":"app_task"},"variable_list":[]},"critical":false},{"type":"fragment","name":"post_action_delete","description":"","runbook":{"name":"7059c589_runbook","description":"","task_definition_list":[{"type":"DAG","name":"c9844a27_dag","description":"","attrs":{"type":"","edges":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"VM","kind":"app_substrate"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]}],"main_task_local_reference":{"name":"c9844a27_dag","kind":"app_task"},"variable_list":[]},"critical":false}],"editables":{"create_spec":{"resources":{"nic_list":{"0":{"vpc_reference":true,"subnet_reference":true,"ip_endpoint_list":true}},"gpu_list":true},"cluster_reference":true}},"create_spec":{"type":"","name":"EG-vm-@@{calm_time}@@","availability_zone_reference":null,"backup_policy":null,"cluster_reference":{"type":"","kind":"cluster","name":"DM3-POC081","uuid":"00063bd9-e620-60f0-0000-0000000297f5"},"resources":{"type":"","nic_list":[{"type":"","nic_type":"NORMAL_NIC","subnet_reference":{"type":"","kind":"subnet","name":"","uuid":"9905e25d-1b7e-4f3c-91fa-e1fc96280874"},"network_function_nic_type":"INGRESS","mac_address":"","ip_endpoint_list":[],"network_function_chain_reference":null,"vpc_reference":null}],"power_state":"ON","guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":4,"memory_size_mib":8192,"gpu_list":[],"parent_reference":null,"hardware_clock_timezone":"","account_uuid":"5144600e-ea7d-4272-a997-f887fece179e","guest_customization":{"type":"","cloud_init":{"type":"","meta_data":"","user_data":"#cloud-config\ntimezone: @@{TIMEZONE}@@\n\nusers:\n  - name: @@{NUTANIX.username}@@\n    shell: \/bin\/bash\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']\n  - name: @@{PLAYER.username}@@\n    shell: \/bin\/bash\n    sudo: []\nchpasswd:\n  list: |\n    @@{NUTANIX.username}@@:@@{NUTANIX.secret}@@\n    @@{PLAYER.username}@@:@@{PLAYER.secret}@@\n  expire: false\n\nssh_pwauth: true"},"sysprep":null},"boot_config":{"type":"","boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"}},"mac_address":"","boot_type":"UEFI"},"vtpm_config":null,"disk_list":[{"type":"","data_source_reference":{"type":"","kind":"app_package","name":"Ubuntu2404","uuid":"d3b546d3-3103-415c-ae7d-48ea260391de"},"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"},"disk_size_mib":40960}],"serial_port_list":[]},"categories":{"Environment":"Production"}},"os_type":"Linux","readiness_probe":{"login_credential_local_reference":{"name":"NUTANIX","kind":"app_credential"},"connection_type":"SSH","connection_port":22,"delay_secs":"30","retries":"5","address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","disable_readiness_probe":false,"connection_protocol":""}}],"package_definition_list":[{"type":"SUBSTRATE_IMAGE","name":"Ubuntu2404","description":"","variable_list":[],"action_list":[],"service_local_reference_list":[],"version":"","options":{"type":"","name":"Ubuntu2404","resources":{"type":"","image_type":"DISK_IMAGE","checksum":{"type":"","checksum_algorithm":"","checksum_value":""},"source_uri":"https:\/\/cloud-images.ubuntu.com\/noble\/current\/noble-server-cloudimg-amd64.img","version":{"type":"","product_version":"24.04","product_name":"Ubuntu"},"architecture":"X86_64"},"description":""}},{"type":"DEB","name":"Create Game Content","description":"","variable_list":[],"action_list":[],"service_local_reference_list":[{"name":"Game","kind":"app_service"}],"version":"","options":{"type":"","install_runbook":{"name":"671d994b_runbook","description":"","task_definition_list":[{"type":"DAG","name":"f60f19f1_dag","description":"","attrs":{"type":"","edges":[{"type":"","from_task_reference":{"name":"Install Docker","kind":"app_task"},"to_task_reference":{"name":"Install CalmDSL","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Install CalmDSL","kind":"app_task"},"to_task_reference":{"name":"Remove 1 host","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Check New node availability","kind":"app_task"},"to_task_reference":{"name":"Create Local users","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Wait for ssh server","kind":"app_task"},"to_task_reference":{"name":"Create Pyhton venv","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Create Local users","kind":"app_task"},"to_task_reference":{"name":"Add AD users","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Init CalmDSL","kind":"app_task"},"to_task_reference":{"name":"Create Prod VMs","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Add AD users","kind":"app_task"},"to_task_reference":{"name":"Create Project","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Create Prod VMs","kind":"app_task"},"to_task_reference":{"name":"Launch Inventory","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Launch Inventory","kind":"app_task"},"to_task_reference":{"name":"Create Jumphost","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Create Jumphost","kind":"app_task"},"to_task_reference":{"name":"Push BP on Calm","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Push BP on Calm","kind":"app_task"},"to_task_reference":{"name":"Create Subnet TestNetwork","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Create Subnet TestNetwork","kind":"app_task"},"to_task_reference":{"name":"Create fake BPs","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Migrate Secondary subnet to advanced","kind":"app_task"},"to_task_reference":{"name":"Install Docker","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Create venv and dl modules","kind":"app_task"},"to_task_reference":{"name":"Create game env file","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Create game env file","kind":"app_task"},"to_task_reference":{"name":"Initialize game","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Remove 1 host","kind":"app_task"},"to_task_reference":{"name":"Check New node availability","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Create Project","kind":"app_task"},"to_task_reference":{"name":"Init CalmDSL","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Activate policy engine","kind":"app_task"},"to_task_reference":{"name":"Get_ClusterName","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Activate policy engine","kind":"app_task"},"to_task_reference":{"name":"wait for 15mn","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"wait for 15mn","kind":"app_task"},"to_task_reference":{"name":"Install CalmDSL","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Clone Git Repo","kind":"app_task"},"to_task_reference":{"name":"Install Python modules","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Create fake BPs","kind":"app_task"},"to_task_reference":{"name":"Create venv and dl modules","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"GetNetworkNames","kind":"app_task"},"to_task_reference":{"name":"Migrate Secondary subnet to advanced","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Initialize game","kind":"app_task"},"to_task_reference":{"name":"Get emails list","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Install Python modules","kind":"app_task"},"to_task_reference":{"name":"Rename Network if Needed","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Rename Network if Needed","kind":"app_task"},"to_task_reference":{"name":"GetNetworkNames","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Create Pyhton venv","kind":"app_task"},"to_task_reference":{"name":"Clone Git Repo","kind":"app_task"},"edge_type":"user_defined"},{"type":"","from_task_reference":{"name":"Get_ClusterName","kind":"app_task"},"to_task_reference":{"name":"Wait for ssh server","kind":"app_task"},"edge_type":"user_defined"}]},"child_tasks_local_reference_list":[{"name":"Activate policy engine","kind":"app_task"},{"name":"Get_ClusterName","kind":"app_task"},{"name":"wait for 15mn","kind":"app_task"},{"name":"Wait for ssh server","kind":"app_task"},{"name":"Create Pyhton venv","kind":"app_task"},{"name":"Clone Git Repo","kind":"app_task"},{"name":"Install Python modules","kind":"app_task"},{"name":"Rename Network if Needed","kind":"app_task"},{"name":"GetNetworkNames","kind":"app_task"},{"name":"Migrate Secondary subnet to advanced","kind":"app_task"},{"name":"Install Docker","kind":"app_task"},{"name":"Install CalmDSL","kind":"app_task"},{"name":"Remove 1 host","kind":"app_task"},{"name":"Check New node availability","kind":"app_task"},{"name":"Create Local users","kind":"app_task"},{"name":"Add AD users","kind":"app_task"},{"name":"Create Project","kind":"app_task"},{"name":"Init CalmDSL","kind":"app_task"},{"name":"Create Prod VMs","kind":"app_task"},{"name":"Launch Inventory","kind":"app_task"},{"name":"Create Jumphost","kind":"app_task"},{"name":"Push BP on Calm","kind":"app_task"},{"name":"Create Subnet TestNetwork","kind":"app_task"},{"name":"Create fake BPs","kind":"app_task"},{"name":"Create venv and dl modules","kind":"app_task"},{"name":"Create game env file","kind":"app_task"},{"name":"Initialize game","kind":"app_task"},{"name":"Get emails list","kind":"app_task"}],"variable_list":[],"target_any_local_reference":{"name":"Create Game Content","kind":"app_package"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Activate policy engine","description":"","attrs":{"type":"","script":"#script\n\nimport requests\n\npc_ip=\"@@{PC_IP}@@\"\npc_user=\"@@{PC_USERNAME}@@\"\npc_pwd=\"@@{PC_PASSWORD}@@\"\n\nheaders = {\n        \"Content-Type\": \"application\/json\",\n        \"Accept\": \"application\/json\"\n    }\n\n\nip_parts = pc_ip.split('.')\nip_parts[3] = \"10\"\n\npolicyIp = '.'.join(ip_parts)\n\n# Get Account\npayload = {\n    \"api_version\": \"3.1\",\n    \"metadata\": {\n        \"spec_version\": 0,\n        \"name\": \"\",\n        \"kind\": \"calm_feature\"\n    },\n    \"spec\": {\n        \"feature_status\": {\n            \"is_enabled\": True,\n            \"config\": {\n                \"data\": {\n                    \"ip_list\": [\n                        policyIp\n                    ]\n                }\n            }\n        }\n    }\n}\n\nurl=\"https:\/\/%s:9440\/api\/calm\/v3.0\/features\/policy\" % (pc_ip)\n\nresponse = requests.put(url, json=payload, headers=headers, verify=False, auth=(pc_user, pc_pwd))\nresponse_data=response.json()\n\nexit(0)","script_type":"static_py3","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"SET_VARIABLE","name":"Get_ClusterName","description":"","attrs":{"type":"","script":"#script\n\nimport requests \n\npc_ip='@@{PC_IP}@@'\npc_user='@@{PC_USERNAME}@@'\npc_pwd='@@{PC_PASSWORD}@@'\n\nheaders = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\"\n}\n \nurl=\"https:\/\/%s:9440\/api\/nutanix\/v3\/clusters\/list\" % pc_ip\n\npayload = {\n    \"kind\": \"cluster\"\n}\n\nresponse = requests.post(url, json=payload, headers=headers, verify=False, auth=(pc_user, pc_pwd))\nresponse_data = json.loads(response.text)\n\nfor item in response_data['entities']:\n    if item['status']['name'] != \"Unnamed\":\n        print(\"CLUSTERNAME=\"+item['status']['name'])\n        break","script_type":"static_py3","exit_status":[],"eval_scope":"local","eval_variables":["CLUSTERNAME"]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"DELAY","name":"wait for 15mn","description":"","attrs":{"type":"","interval_secs":900},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"DELAY","name":"Wait for ssh server","description":"","attrs":{"type":"","interval_secs":30},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Create Pyhton venv","description":"","attrs":{"type":"","script":"#!\/bin\/bash\n\nsudo apt update -y\nsudo apt install git python3-pip python3-venv -y\n\nmkdir -p \/home\/nutanix\/.calm\ncd \/home\/nutanix\/.calm\n\npython3 -m venv venv\n","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Clone Git Repo","description":"","attrs":{"type":"","script":"#!\/bin\/bash\n\necho \"Cloning repository...\"\necho \"Branch : @@{GIT_BRANCH}@@\"\necho \"URL : @@{GIT_URL}@@\"\n\n#git clone https:\/\/@@{TOKEN}@@@github.com\/Golgautier\/ntnx-escape-game.git\ngit clone --depth 1 --branch \"@@{GIT_BRANCH}@@\" \"@@{GIT_URL}@@\"","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Install Python modules","description":"","attrs":{"type":"","script":"#!\/bin\/bash \n\ncd ~\/.calm\n\nsource venv\/bin\/activate\n\npip install -r \/home\/nutanix\/ntnx-escape-game\/requirements.txt\n","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Rename Network if Needed","description":"","attrs":{"type":"","script":"#!\/bin\/bash \n\ncd ~\/.calm\n\nsource venv\/bin\/activate\n\npython <<EOF\n\nimport requests\nimport ntnx_networking_py_client\nfrom jsonpath_ng.ext import parse\nimport uuid\n\npc_ip=\"@@{PC_IP}@@\"\npc_user=\"@@{PC_USERNAME}@@\"\npc_pwd=\"@@{PC_PASSWORD}@@\"\nsourceSubnetName=\"aux-1\"\ntargetSubnetName=\"secondary\"\n\nnetworkFound=False\n\n# Get subnet UUID\n# Configure the client\nconfig = ntnx_networking_py_client.Configuration()\nconfig.host = pc_ip\nconfig.port = 9440\nconfig.max_retry_attempts = 3\nconfig.backoff_factor = 3\nconfig.username = pc_user\nconfig.password = pc_pwd\nconfig.verify_ssl = False\n\nclient = ntnx_networking_py_client.ApiClient(configuration=config)\nsubnets_api = ntnx_networking_py_client.SubnetsApi(api_client=client)\n\ntry:\n    api_response = subnets_api.list_subnets()\n    \n    # Get Secondary Network\n    jsonpathExprSecondary = parse('$.data[?(@.name =~ \"secondary\")].name')\n    secondaryNetwork=jsonpathExprSecondary.find(api_response.to_dict())\n    \n    if secondaryNetwork:\n        networkFound=True\n    \nexcept ntnx_networking_py_client.rest.ApiException as e:\n    print(e)\n\n# If no 'secondary' network found, we will try to get the UUID of the source subnet aux-1\nif networkFound==True:\n    print(\"Secondary network found, no need to rename it\")\nelse:\n    response=subnets_api.list_subnets(_filter=\"name eq '%s'\" % sourceSubnetName)\n    myData = response.to_dict()\n\n    # Check if we got an id\n    if myData['data']!=None:\n        subnetUUID=myData['data'][0]['ext_id']\n    else:\n        print(\"No subnet found with name %s or secondary, ERROR\" % sourceSubnetName)\n        exit(2)\n        \n    # Get etag\n    response=subnets_api.get_subnet_by_id(subnetUUID)\n    etag=client.get_etag(response)\n\n    # Change name in payload\n    response._GetSubnetApiResponse__data.name=targetSubnetName\n\n    # Apply playload\n    response=subnets_api.update_subnet_by_id(subnetUUID, body=response._GetSubnetApiResponse__data, if_match=etag)\n\nEOF","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"SET_VARIABLE","name":"GetNetworkNames","description":"","attrs":{"type":"","script":"#!\/bin\/bash \n\ncd ~\/.calm\n\nsource venv\/bin\/activate\n\npython <<EOF\nimport ntnx_clustermgmt_py_client\nimport ntnx_networking_py_client\nimport requests\nfrom jsonpath_ng.ext import parse\nimport ntnx_networking_py_client\nfrom jsonpath_ng.ext import parse\nimport requests\nimport urllib3\n\nurllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n\nimport json\n\npc_ip = \"@@{PC_IP}@@\"\npc_user = \"@@{PC_USERNAME}@@\"\npc_pwd = \"@@{PC_PASSWORD}@@\"\n\n\nsubnetName=\"TestNetwork\"\n\nurl=\"https:\/\/%s:9440\/api\/nutanix\/v3\/clusters\/list\" % pc_ip\n\nheaders = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\"\n}\n\npayload = {\n    \"kind\": \"subnet\"\n    }\n\nresponse = requests.post(url, json=payload, headers=headers, verify=False, auth=(pc_user, pc_pwd))\nresponse_data = response.json()\n\njsonpath_expr = parse('$.entities[?(@.spec.name!=\"Unnamed\")].metadata.uuid')\n\nfor match in jsonpath_expr.find(response_data):\n    clusterUUID= match.value\n\n\n# Configure the client\nconfig = ntnx_networking_py_client.Configuration()\nconfig.host = pc_ip\nconfig.port = 9440\nconfig.max_retry_attempts = 3\nconfig.backoff_factor = 3\nconfig.username = pc_user\nconfig.password = pc_pwd\nconfig.verify_ssl = False\n\nclient = ntnx_networking_py_client.ApiClient(configuration=config)\nsubnets_api = ntnx_networking_py_client.SubnetsApi(api_client=client)\n\n\ntry:\n    api_response = subnets_api.list_subnets()\n    \n    # Get Primary Network\n    jsonpathExprPrimary = parse('$.data[?(@.name =~ \"primary\")].name')\n    primaryNetwork=jsonpathExprPrimary.find(api_response.to_dict())\n    print(\"PRIMARY_SUBNET=\",primaryNetwork[0].value)\n    \n    # GEt Secondary Network\n    jsonpathExprSecondary = parse('$.data[?(@.name =~ \"secondary\")].name')\n    secondaryNetwork=jsonpathExprSecondary.find(api_response.to_dict())\n    print(\"SECONDARY_SUBNET=\",secondaryNetwork[0].value)\n    \nexcept ntnx_networking_py_client.rest.ApiException as e:\n    print(e)\n\nEOF\n","script_type":"sh","exit_status":[],"eval_scope":"local","eval_variables":["PRIMARY_SUBNET","SECONDARY_SUBNET"]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Migrate Secondary subnet to advanced","description":"","attrs":{"type":"","script":"#!\/bin\/bash \n\ncd ~\/.calm\n\nsource venv\/bin\/activate\n\npython <<EOF\n\nimport requests\nimport ntnx_networking_py_client\nimport uuid\n\npc_ip=\"@@{PC_IP}@@\"\npc_user=\"@@{PC_USERNAME}@@\"\npc_pwd=\"@@{PC_PASSWORD}@@\"\nsubnetName=\"@@{SECONDARY_SUBNET}@@\"\n\n# Get subnet UUID\n# Configure the client\nconfig = ntnx_networking_py_client.Configuration()\nconfig.host = pc_ip\nconfig.port = 9440\nconfig.max_retry_attempts = 3\nconfig.backoff_factor = 3\nconfig.username = pc_user\nconfig.password = pc_pwd\nconfig.verify_ssl = False\n\nclient = ntnx_networking_py_client.ApiClient(configuration=config)\nsubnets_api = ntnx_networking_py_client.SubnetsApi(api_client=client)\n\nresponse=subnets_api.list_subnets(_filter=\"name eq '\" + subnetName + \"'\")\nmyData = response.to_dict()\n\n# Check if we got an id\nif myData['data']!=None:\n    subnetUUID=myData['data'][0]['ext_id']\n    \n# get etag\nresponse=subnets_api.get_subnet_by_id(subnetUUID)\netag=client.get_etag(response)\n\n# Migrate it\nurl=\"https:\/\/%s:9440\/api\/networking\/v4.0.b2\/config\/\\$actions\/migrate-subnets\" % pc_ip\n\nheaders = {\n    \"Content-Type\": \"application\/json\",\n    \"Accept\": \"application\/json\",\n    \"Ntnx-Request-Id\": str(uuid.uuid4()),\n    \"If-Match\": etag\n}\n\npayload = {\n    \"subnets\":\n        [\n            {\n            \"subnetUuid\": subnetUUID\n            }\n        ]\n    }\n\nresponse = requests.post(url, headers=headers, json=payload, auth=(pc_user, pc_pwd), verify=False)\nprint(\"Call RC :\",response.status_code)\nEOF\n","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Install Docker","description":"","attrs":{"type":"","script":"#!\/bin\/bash -x\n\n# Add Docker's official GPG key:\nsudo apt-get update -y\nsudo apt-get install ca-certificates curl git -y\nsudo install -m 0755 -d \/etc\/apt\/keyrings\nsudo curl -fsSL https:\/\/download.docker.com\/linux\/ubuntu\/gpg -o \/etc\/apt\/keyrings\/docker.asc\nsudo chmod a+r \/etc\/apt\/keyrings\/docker.asc\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=\/etc\/apt\/keyrings\/docker.asc] https:\/\/download.docker.com\/linux\/ubuntu \\\n  $(. \/etc\/os-release && echo \"$VERSION_CODENAME\") stable\" | \\\n  sudo tee \/etc\/apt\/sources.list.d\/docker.list > \/dev\/null\nsudo apt-get update -y\n\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y\n","script_type":"sh","command_line_args":"","exit_status":[],"login_credential_local_reference":{"name":"NUTANIX","kind":"app_credential"}},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Install CalmDSL","description":"","attrs":{"type":"","script":"#!\/bin\/bash\n\nmkdir -p ~\/nutanix\ncd ~\/nutanix\n\ngit clone https:\/\/github.com\/nutanix\/calm-dsl.git","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Remove 1 host","description":"","attrs":{"type":"","script":"#!\/bin\/bash \n\ncd ~\/.calm\n\nsource venv\/bin\/activate\n\npython <<EOF\n\nimport ntnx_clustermgmt_py_client\nfrom jsonpath_ng.ext import parse\n\n# Configure the client\nconfig = ntnx_clustermgmt_py_client.Configuration()\n# IPv4\/IPv6 address or FQDN of the cluster\nconfig.host = \"@@{PC_IP}@@\"\n# Port to which to connect to\nconfig.port = 9440\n# Max retry attempts while reconnecting on a loss of connection\nconfig.max_retry_attempts = 3\n# Backoff factor to use during retry attempts\nconfig.backoff_factor = 3\n# UserName to connect to the cluster\nconfig.username = \"@@{PC_USERNAME}@@\"\n# Password to connect to the cluster\nconfig.password = \"@@{PC_PASSWORD}@@\"\n# Verify SSL certificates\nconfig.verify_ssl = False\n\nclient = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\nclusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\npage = 0\nlimit = 50\n\n# Get Cluster ID\ntry:\n   api_response = clusters_api.list_clusters(_page=page, _limit=limit)\nexcept ntnx_clustermgmt_py_client.rest.ApiException as e:\n   print(e)\n\njsonpath_expr=parse('$.data[?(@.name != \"Unnamed\")].ext_id')\n\nd = api_response.to_dict() if api_response else {}\nitems = d.get(\"data\") or []\nif not items:\n    print(\"No cluster found\")\n    exit(0)\nmatches = [m.value for m in jsonpath_expr.find(d)]\nclusterUUID = matches[0] if matches else items[0].get(\"ext_id\")\n\n# Get Node ID finishing by -4\ntry:\n   api_response = clusters_api.list_hosts_by_cluster_id(clusterExtId=clusterUUID,_filter=\"endswith(hostName,'-4')\",  _page=page, _limit=limit)\n   hosts = getattr(api_response, \"_ListHostsByClusterIdApiResponse__data\", None)\n   if not hosts:\n       print(\"No '-4' host found, skipping removal\")\n       exit(0)\n   NodeUUID = hosts[0].ext_id\nexcept ntnx_clustermgmt_py_client.rest.ApiException as e:\n   print(e)\n   exit(0)\n\n# Please add authorization information here if needed.\nnodeRemovalParams = ntnx_clustermgmt_py_client.NodeRemovalParams()\n\n# NodeRemovalParams object initializations here...\nnodeRemovalParams.node_uuids = [ NodeUUID ] \n\nprint(\"Launching the node removal. ClusterID : \"+clusterUUID+\" \/ NodeID : \"+NodeUUID)\n\ntry:\n   api_response = clusters_api.remove_node(clusterExtId=clusterUUID, body=nodeRemovalParams)\n   exit(0)\nexcept ntnx_clustermgmt_py_client.rest.ApiException as e:\n   print(e)\n   \nEOF","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Check New node availability","description":"","attrs":{"type":"","script":"#script \n\nimport requests\n\n# Deactivated (need to wait too long)\nprint(\"Deactivated\")\nexit(0)\n\npc_ip=\"@@{PC_IP}@@\"\npc_user=\"@@{PC_USERNAME}@@\"\npc_pwd=\"@@{PC_PASSWORD}@@\"\n\nurl=\"https:\/\/%s:9440\/api\/clustermgmt\/v4.0.b2\/config\/clusters\" % pc_ip\n\nheaders = {\n    \"Content-Type\": \"application\/json\",\n    \"Accept\": \"application\/json\"\n}\n\nresponse = requests.get(url, headers=headers, verify=False, auth=(pc_user, pc_pwd))\nresponse_data = json.loads(response.text)\n\n\nif response_data['data']:\n    for elt in response_data['data']:\n        if elt['nodes']['numberOfNodes'] == 3:\n            clusterUUID = elt['extId']\n            break\n\n\nurl=\"https:\/\/%s:9440\/api\/clustermgmt\/v4.0.b2\/config\/clusters\/%s\/rackable-units\" % (pc_ip,clusterUUID)\nheaders = {\n    \"Content-Type\": \"application\/json\",\n    \"Accept\": \"application\/json\"\n}\n\nresponse = requests.get(url , headers=headers, verify=False, auth=(pc_user, pc_pwd))\nresponse_data = json.loads(response.text)\n\nif len(response_data['data'][0]['nodes']) == 4:\n    exit(0)\nelse:\n    exit(2)","script_type":"static_py3","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Create Local users","description":"","attrs":{"type":"","script":"#!\/bin\/bash \n\ncd ~\/.calm\n\nsource venv\/bin\/activate\n\npython <<EOF\nfrom jsonpath_ng.ext import parse\nimport json\nimport ntnx_iam_py_client\n\npc_ip = \"@@{PC_IP}@@\"\npc_user = \"@@{PC_USERNAME}@@\"\npc_pwd = '@@{PC_PASSWORD}@@'\n\n\n# Configure the client\nconfig = ntnx_iam_py_client.Configuration()\n# IPv4\/IPv6 address or FQDN of the cluster\nconfig.host = pc_ip\n# Port to which to connect to\nconfig.port = 9440\n# Max retry attempts while reconnecting on a loss of connection\nconfig.max_retry_attempts = 3\n# Backoff factor to use during retry attempts\nconfig.backoff_factor = 3\n# UserName to connect to the cluster\nconfig.username = pc_user\n# Password to connect to the cluster\nconfig.password = pc_pwd\nconfig.verify_ssl = False\n\n# Please add authorization information here if needed.\nclient = ntnx_iam_py_client.ApiClient(configuration=config)\nusers_api = ntnx_iam_py_client.UsersApi(api_client=client)\n\n\nusers = [\n    {\n        \"username\": \"charlie\",\n        \"email\": \"charlie.ugly@others.com\",\n        \"password\": \"Nutanix\/4u\",\n        \"displayName\": \"Charlie\",\n        \"firstName\": \"Charlie\",\n        \"lastName\": \"Ugly\"\n    },\n    {\n        \"username\": \"thom\",\n        \"email\": \"thom.cat@others.com\",\n        \"password\": \"Nutanix\/4u\",\n        \"displayName\":\"Thom\",\n        \"firstName\":\"Thom\",\n        \"lastName\":\"Cat\"\n    },\n    {\n        \"username\": \"william\",\n        \"email\": \"william.shake@others.com\",\n        \"password\": \"Nutanix\/4u\",\n        \"displayName\":\"Willy\",\n        \"firstName\":\"William\",\n        \"lastName\":\"Shake\"\n    }\n]\n\nfor guy in users:\n    user = ntnx_iam_py_client.User()\n    user.username = guy['username']\n    user.email_id = guy['email']\n    user.password = guy['password']\n    user.display_name = guy['displayName']\n    user.first_name = guy['firstName']\n    user.last_name = guy['lastName']\n    user.user_type=\"LOCAL\"\n\n    try:\n        api_response = users_api.create_user(body=user)\n    except ntnx_iam_py_client.rest.ApiException as e:\n        print(e)\n\n\nexit(0)\n\nEOF","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Add AD users","description":"","attrs":{"type":"","script":"if (-not (Get-ADUser -Filter \"SamAccountName -eq 'TheBadGuy'\" -EA SilentlyContinue)) {\n  New-ADUser -Name \"TheBadGuy\" -GivenName \"Henry\" -Surname \"The Bad Guy\" `\n    -SamAccountName \"TheBadGuy\" -UserPrincipalName \"thebadguy\" `\n    -EmailAddress \"thebadguy@others.com\" -Path \"CN=Users,DC=ntnxlab,DC=local\" `\n    -AccountPassword (ConvertTo-SecureString 'MyPassword4Prod!' -AsPlainText -Force) `\n    -Enabled $true -ChangePasswordAtLogon $false -CannotChangePassword $true\n} else {\n  Write-Host \"User 'TheBadGuy' already exists, skipping.\"\n}\n\nif (-not (Get-ADUser -Filter \"SamAccountName -eq 'TheProjectManager'\" -EA SilentlyContinue)) {\n  New-ADUser -Name \"TheProjectManager\" -GivenName \"Paul\" -Surname \"Project Manager\" `\n    -SamAccountName \"TheProjectManager\" -UserPrincipalName \"theprojectmanager\" `\n    -EmailAddress \"theprojectmanager@others.com\" -Path \"CN=Users,DC=ntnxlab,DC=local\" `\n    -AccountPassword (ConvertTo-SecureString 'MyPassword4Proj!' -AsPlainText -Force) `\n    -Enabled $true -ChangePasswordAtLogon $false -CannotChangePassword $true\n} else {\n  Write-Host \"User 'TheProjectManager' already exists, skipping.\"\n}","script_type":"npsscript","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"exec_target_reference":{"name":"AD","kind":"app_endpoint"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"SET_VARIABLE","name":"Create Project","description":"","attrs":{"type":"","script":"#!\/bin\/bash \n\ncd ~\/.calm\n\nsource venv\/bin\/activate\n\npython <<EOF\n\nfrom jsonpath_ng.ext import parse\nimport requests\nimport time\nimport urllib3\nimport uuid\n\nurllib3.disable_warnings()\n\n\npc_ip=\"@@{PC_IP}@@\"\npc_user=\"@@{PC_USERNAME}@@\"\npc_pwd='@@{PC_PASSWORD}@@'\nprojectName=\"production\"\nprojectAdmin=\"thebadguy\"\nheaders = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\"\n}\n\n# Check if project already exists\nprojects_list_url = \"https:\/\/%s:9440\/api\/nutanix\/v3\/projects\/list\" % pc_ip\npayload_list = {\"kind\":\"project\",\"filter\": f\"name=={projectName}\"}\nr = requests.post(projects_list_url, json=payload_list, headers=headers, verify=False, auth=(pc_user, pc_pwd))\nrd = r.json()\nif rd.get('entities'):\n    print(f\"Project '{projectName}' already exists - assuming this script has already been executed. Exiting.\")\n    exit(0)\n\n# Get Account\nurl=\"https:\/\/%s:9440\/api\/nutanix\/v3\/accounts\/list\" % pc_ip\n\npayload = {\n    \"kind\": \"account\"\n    }\n\nresponse = requests.post(url, json=payload, headers=headers, verify=False, auth=(pc_user, pc_pwd))\nresponse_data = response.json()\n\njsonpath_expr = parse('$.entities[?(@.metadata.name==\"NTNX_LOCAL_AZ\")].metadata.uuid')\n\nfor match in jsonpath_expr.find(response_data):\n    account_uuid = match.value\n\n# Get Subnets\nurl=\"https:\/\/%s:9440\/api\/networking\/v4.0\/config\/subnets\" % pc_ip\n\npayload = {\n    \"kind\": \"subnet\"\n    }\n\nresponse = requests.get(url, json=payload, headers=headers, verify=False, auth=(pc_user, pc_pwd))\nresponse_data = response.json()\n\njsonpath_expr = parse('$.data[?(@.name==\"@@{PRIMARY_SUBNET}@@\")].extId')\n\nfor match in jsonpath_expr.find(response_data):\n    primary_subnet_uuid = match.value\n\njsonpath_expr = parse('$.data[?(@.name==\"@@{SECONDARY_SUBNET}@@\")].extId')\n\nfor match in jsonpath_expr.find(response_data):\n    secondary_subnet_uuid = match.value  \n\n# Get Clusters\nurl=\"https:\/\/%s:9440\/api\/nutanix\/v3\/clusters\/list\" % pc_ip\n\nheaders = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\"\n}\n\npayload = {\n    \"kind\": \"cluster\"\n    }\n\nresponse = requests.post(url, json=payload, headers=headers, verify=False, auth=(pc_user, pc_pwd))\nresponse_data = response.json()\n\njsonpath_expr = parse('$.entities[?(@.spec.name!=\"Unnamed\")].metadata.uuid')\n\nfor match in jsonpath_expr.find(response_data):\n    cluster_uuid = match.value\n\n# Create Project\nurl=\"https:\/\/%s:9440\/api\/nutanix\/v3\/projects\" % pc_ip\n\nheaders = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\"\n}\n\npayload =  {\n    \"metadata\": {\n        \"kind\": \"project\",\n    },\n    \"spec\": {\n        \"name\": projectName,\n        \"description\": \"Production Project\",\n        \"resources\": {\n            \"resource_domain\": {\n                \"resources\": []\n            },\n            \"account_reference_list\": [\n                {\n                    \"kind\": \"account\",\n                    \"uuid\": account_uuid\n                }\n            ],\n            \"cluster_reference_list\": [\n                {\n                    \"kind\": \"cluster\",\n                    \"uuid\": cluster_uuid\n                }\n            ],\n            \"default_subnet_reference\": {\n                \"kind\": \"subnet\",\n                \"uuid\": primary_subnet_uuid\n            },            \n            \"subnet_reference_list\": [\n                {\n                    \"kind\": \"subnet\",\n                    \"name\": \"primary\",\n                    \"uuid\": primary_subnet_uuid\n                },\n                {\n                    \"kind\": \"subnet\",\n                    \"name\": \"secondary\",\n                    \"uuid\": secondary_subnet_uuid\n                }\n            ],\n\n        }\n    }\n}\n\nresponse = requests.post(url, json=payload, headers=headers, verify=False, auth=(pc_user, pc_pwd))\nresponse_data = response.json()\ntaskID = response_data['status']['execution_context']['task_uuid']\n\nprint(\"We check Task UUID : - \"+taskID)\n\nended=False\nurl=\"https:\/\/%s:9440\/api\/nutanix\/v3\/tasks\/%s\" % (pc_ip,taskID)\n\nwhile not ended:\n    response = requests.get(url, headers=headers, verify=False, auth=(pc_user, pc_pwd))\n    response_data = response.json()\n    if response_data['status']==\"SUCCEEDED\":\n        projectUUID=response_data['entity_reference_list'][0]['uuid']\n        break;\n    elif response_data['status']==\"FAILED\":\n        exit(1)\n    else:\n        time.sleep(5)\n\n\n# Get Spec version\nurl=\"https:\/\/%s:9440\/api\/nutanix\/v3\/projects\/%s\" % (pc_ip,projectUUID)\nresponse=requests.get(url, headers=headers, verify=False, auth=(pc_user, pc_pwd))\nresponse_data = response.json()\n\nprojectSpecVersion=response_data['metadata']['spec_version']\n\nprint(\"Project UUID : \" + projectUUID + \" \/ Version :\" + str(projectSpecVersion))\n\n## Add User\n\n# Get AD Service\nurl = \"https:\/\/%s:9440\/api\/iam\/v4.0\/authn\/directory-services\" % pc_ip\n\nresponse = requests.get(url, headers=headers, verify=False, auth=(pc_user, pc_pwd))\nresponse_data = response.json()\n\ndirectoryType = response_data['data'][0]['directoryType']\ndirectoryID=response_data['data'][0]['extId']\n\n# Add TheBadGuy into the users\nurl = \"https:\/\/%s:9440\/api\/iam\/v4.0\/authn\/users\" % pc_ip\n\npayload = {\n    \"firstName\": \"Henry\",\n    'lastName': \"Ugly\",\n    \"displayName\": projectAdmin,\n    \"username\": projectAdmin,\n    \"userType\": \"LDAP\",\n    \"idpId\": directoryID,\n}\n\nresponse = requests.post(url, json=payload, headers=headers, verify=False, auth=(pc_user, pc_pwd))\nresponse_data = response.json()\n\n# Get UserID\nurl=\"https:\/\/%s:9440\/api\/iam\/v4.0\/authn\/users\" % pc_ip\n\nresponse = requests.get(url, headers=headers, verify=False, auth=(pc_user, pc_pwd))\nresponse_data = response.json()\n\njsonpath_expr = parse(\"$.data[?(@.username=='\"+projectAdmin+\"')].extId\")\n\nfor match in jsonpath_expr.find(response_data):\n    userUUID = match.value\n\nprint(\"User Found : - \"+userUUID)\n\n# We get Project Admin role UUID\nurl = \"https:\/\/%s:9440\/api\/nutanix\/v3\/roles\/list\" % pc_ip\n\npayload={\n    \"kind\": \"role\",\n}\n\nresponse = requests.post(url, json=payload,headers=headers, verify=False, auth=(pc_user, pc_pwd))\nresponse_data = response.json()\n\njsonpath_expr=parse(\"$.entities[?(@.status.name=='Project Admin')].metadata.uuid\")\n\nfor match in jsonpath_expr.find(response_data):\n    projectAdminRoleUUID = match.value\n    \n\nprint(\"Role Project admin UUID :\" + projectAdminRoleUUID)\n\n\n# Update project to add user\n\npayload = {\n    \"api_version\": \"3.1\",\n    \"metadata\": {\n        \"project_reference\": {\n            \"kind\": \"project\",\n            \"name\": projectName,\n            \"uuid\": projectUUID\n        },\n        #\"categories_mapping\": {},\n        #\"creation_time\": \"2024-11-22T13:33:21Z\",\n        \"spec_version\": projectSpecVersion,\n        \"kind\": \"project\",\n        #\"last_update_time\": \"2024-11-22T13:33:21Z\",\n        \"uuid\": projectUUID,\n        #\"categories\": {},\n        # \"owner_reference\": {\n        #     \"kind\": \"user\",\n        #     \"name\": \"admin\",\n        #     \"uuid\": \"00000000-0000-0000-0000-000000000000\"\n        #}\n    },\n    \"spec\": {\n        \"project_detail\": {\n            \"name\": \"production\",\n            \"resources\": {\n                \"account_reference_list\": [\n                    {\n                        \"kind\": \"account\",\n                        \"uuid\": account_uuid\n                    }\n                ],\n                \"user_reference_list\": [\n                    {\n                        \"name\": projectAdmin,\n                        \"kind\": \"user\",\n                        \"uuid\": userUUID\n                    }\n                ],\n                \"default_subnet_reference\": {\n                    \"kind\": \"subnet\",\n                    \"uuid\": primary_subnet_uuid\n                },\n                \"subnet_reference_list\": [\n                    {\n                        \"kind\": \"subnet\",\n                        \"name\": \"secondary\",\n                        \"uuid\": secondary_subnet_uuid\n                    },\n                    {\n                        \"kind\": \"subnet\",\n                        \"name\": \"primary\",\n                        \"uuid\": primary_subnet_uuid\n                    }\n                ],\n                \"cluster_reference_list\": [\n                    {\n                        \"kind\": \"cluster\",\n                        \"uuid\": cluster_uuid\n                    }\n                ],\n                \"enable_directory_and_identity_provider_shortlist\": False,\n            },\n            \"description\": \"Production Project\"\n        },\n        \"user_list\": [\n            {\n                \"metadata\": {\n                    \"kind\": \"user\",\n                    \"uuid\": userUUID\n                },\n                \"user\": {\n                    \"resources\": {\n                        \"directory_service_user\": {\n                            \"user_principal_name\": projectAdmin,\n                            \"directory_service_reference\": {\n                                \"uuid\": directoryID,\n                                \"kind\": \"directory_service\"\n                            }\n                        }\n                    }\n                },\n                \"operation\": \"ADD\"\n            }\n        ],\n        \"access_control_policy_list\": [\n            {\n                \"acp\": {\n                    \"name\": \"nuCalmAcp-\"+str(uuid.uuid4()),\n                    \"resources\": {\n                        \"role_reference\": {\n                            \"name\": \"Project Admin\",\n                            \"uuid\": \"e91e0b3b-5f69-4644-ba30-e6e05163d230\",\n                            \"kind\": \"role\"\n                        },\n                        \"user_reference_list\": [\n                            {\n                                \"name\": projectAdmin,\n                                \"kind\": \"user\",\n                                \"uuid\": userUUID\n                            }\n                        ],\n                        \"filter_list\": {\n                            \"context_list\": [\n                                {\n                                    \"scope_filter_expression_list\": [\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": \"PROJECT\",\n                                            \"right_hand_side\": {\n                                                \"uuid_list\": [\n                                                    projectUUID\n                                                ]\n                                            }\n                                        }\n                                    ],\n                                    \"entity_filter_expression_list\": [\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"ALL\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        }\n                                    ]\n                                },\n                                {\n                                    \"entity_filter_expression_list\": [\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"image\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"marketplace_item\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"SELF_OWNED\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"directory_service\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            },\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"role\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"right_hand_side\": {\n                                                \"uuid_list\": [\n                                                    projectUUID\n                                                ]\n                                            },\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"project\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"environment\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"SELF_OWNED\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            },\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"app_icon\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            },\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"category\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"app_task\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"SELF_OWNED\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"app_variable\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"SELF_OWNED\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"identity_provider\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"vm_recovery_point\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"report_config\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"SELF_OWNED\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"virtual_network\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"resource_type\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"custom_provider\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"distributed_virtual_switch\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"container\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"cluster\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"uuid_list\": [\n                                                    cluster_uuid\n                                                ]\n                                            }\n                                        }\n                                    ]\n                                },\n                                {\n                                    \"scope_filter_expression_list\": [\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": \"PROJECT\",\n                                            \"right_hand_side\": {\n                                                \"uuid_list\": [\n                                                    projectUUID\n                                                ]\n                                            }\n                                        }\n                                    ],\n                                    \"entity_filter_expression_list\": [\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"blueprint\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"environment\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"marketplace_item\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"runbook\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"vm\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            },\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"user\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            },\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"user_group\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"app_showback\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    },\n                    \"description\": \"\"\n                },\n                \"metadata\": {\n                    \"kind\": \"access_control_policy\"\n                },\n                \"operation\": \"ADD\"\n            }\n        ]\n    }\n}\n\n# We launch the update\nurl=\"https:\/\/%s:9440\/api\/nutanix\/v3\/projects_internal\/%s\" % (pc_ip,projectUUID)\n\nresponse = requests.put(url, json=payload, headers=headers, verify=False, auth=(pc_user, pc_pwd))\nresponse_data=response.json()\n\nprint(\"ProjectUUID=\"+projectUUID)\n\nexit(0)\nEOF","script_type":"sh","exit_status":[],"eval_scope":"local","eval_variables":["ProjectUUID"]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Init CalmDSL","description":"","attrs":{"type":"","script":"#!\/bin\/bash\n\nmkdir dockervolume\n\nsudo docker run  -v \/home\/nutanix\/dockervolume:\/root\/.calm -it @@{DockerRegistry}@@\/ntnx\/calm-dsl mkdir -p \/root\/.calm\/\n\nsudo docker run  -v \/home\/nutanix\/dockervolume:\/root\/.calm @@{DockerRegistry}@@\/ntnx\/calm-dsl calm init dsl --ip @@{PC_IP}@@ --username @@{PC_USERNAME}@@ --password '@@{PC_PASSWORD}@@' --port 9440 -pj \"production\"","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Create Prod VMs","description":"","attrs":{"type":"","script":"#!\/bin\/bash \n\ncd ~\/.calm\n\nsource venv\/bin\/activate\n\npython <<EOF\nfrom jsonpath_ng.ext import parse\nimport json\nimport ntnx_vmm_py_client.configuration\nimport requests\nimport http.client\nimport ntnx_prism_py_client\nimport ntnx_vmm_py_client\nimport ntnx_networking_py_client\nimport uuid\nimport time\n\npc_ip=\"@@{PC_IP}@@\"\npc_user=\"@@{PC_USERNAME}@@\"\npc_pwd='@@{PC_PASSWORD}@@'\ncat_key=\"Environment\"\ncat_value=\"Production\"\nproject_name=\"production\"\nimage_name=\"Ubuntu2404\"\nprojectUUID=\"@@{ProjectUUID}@@\"\n\n# Get categoryID for Environment:Production\nconfig = ntnx_prism_py_client.Configuration()\nconfig.host = pc_ip\nconfig.port = 9440\nconfig.max_retry_attempts = 3\nconfig.backoff_factor = 3\nconfig.username = pc_user\nconfig.password = pc_pwd\nconfig.verify_ssl = False\n\n\nheaders = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\"\n}\n\n\nVMSpecs = [\n    {\n        \"name\": \"prd-ransom-probe-1\",\n        \"numSockets\": 2,\n        \"memorySizeGB\": 4\n    },\n    {\n        \"name\": \"prd-ransom-probe-1\",\n        \"numSockets\": 2,\n        \"memorySizeGB\": 4\n    },\n    {\n        \"name\": \"prd-ransom-payment-core\",\n        \"numSockets\": 2,\n        \"memorySizeGB\": 4\n    },\n    {\n        \"name\": \"prd-ransom-payment-front\",\n        \"numSockets\": 2,\n        \"memorySizeGB\": 4\n    },\n    {\n        \"name\": \"beta-ransom-engine-v2.2\",\n        \"numSockets\": 2,\n        \"memorySizeGB\": 4\n    },\n    {\n        \"name\": \"prd-mail\",\n        \"numSockets\": 2,\n        \"memorySizeGB\": 4\n    },\n    {\n        \"name\": \"prd-directory\",\n        \"numSockets\": 2,\n        \"memorySizeGB\": 4\n    },\n    {\n        \"name\": \"prd-scan\",\n        \"numSockets\": 2,\n        \"memorySizeGB\": 4\n    },\n]\n\n\n\nclient_prrism = ntnx_prism_py_client.ApiClient(configuration=config)\ncategories_api = ntnx_prism_py_client.CategoriesApi(api_client=client_prrism)\npage = 0\nlimit = 50\n\ntry:\n    api_response = categories_api.list_categories(_filter=\"((key eq '\"+cat_key+\"') and (value eq '\"+cat_value+\"'))\", _page=page, _limit=limit)\n    catUUID=api_response.data[0].ext_id\nexcept ntnx_prism_py_client.rest.ApiException as e:\n    print(e)\n\n# Get Secondary network ID\nurl=\"https:\/\/%s:9440\/api\/networking\/v4.0\/config\/subnets\" % pc_ip\n\npayload = {\n    \"kind\": \"subnet\"\n    }\n\nresponse = requests.get(url, json=payload, headers=headers, verify=False, auth=(pc_user, pc_pwd))\nresponse_data = response.json()\n\njsonpath_expr = parse('$.data[?(@.name==\"@@{SECONDARY_SUBNET}@@\")].extId')\n\nfor match in jsonpath_expr.find(response_data):\n    subnetUUID = match.value\n\n# Get Image ID\nurl = \"https:\/\/%s:9440\/api\/nutanix\/v3\/images\/list\" % pc_ip\n\npayload={\n    \"kind\": \"image\",\n    \"length\": 100,\n    }\n\nresponse = requests.post(url, json=payload, headers=headers, verify=False, auth=(pc_user, pc_pwd))\nresponse_data = response.json()\n\nfor image in response_data['entities']:\n    if image['status']['name'] == image_name:\n        imageUUID=image['metadata']['uuid']\n\n# Get ClusterUUID\nurl=\"https:\/\/%s:9440\/api\/clustermgmt\/v4.0\/config\/clusters\" % pc_ip\n\nresponse = requests.get(url, headers=headers, verify=False, auth=(pc_user, pc_pwd))\nresponse_data = json.loads(response.text)\n\njson_expr = parse(\"data[?(@.name!='Unnamed')].extId\")\n\nfor match in json_expr.find(response_data):\n    clusterUUID = match.value\n\n# Create the VMs\nclient_vm = ntnx_vmm_py_client.ApiClient(configuration=config)\nvm_api = ntnx_vmm_py_client.VmApi(api_client=client_vm)\n\n# Vm object initializations here...\nfor elt in VMSpecs:\n\n\n    vm=ntnx_vmm_py_client.AhvConfigVm(\n        name=elt['name'],\n        num_sockets=elt['numSockets'],\n        memory_size_bytes=elt['memorySizeGB']*1024*1024*1024,\n        cluster=ntnx_vmm_py_client.AhvConfigClusterReference(\n                        ext_id=clusterUUID\n                    ),\n        categories=[\n            ntnx_vmm_py_client.AhvConfigCategoryReference(\n                ext_id=catUUID\n            )\n        ],\n        nics=[\n            ntnx_vmm_py_client.AhvConfigNic(\n                backing_info=ntnx_vmm_py_client.EmulatedNic(\n                    is_connected=True,\n                    num_queues=1\n                ),\n                network_info=ntnx_vmm_py_client.AhvConfigNicNetworkInfo(\n                    subnet=ntnx_vmm_py_client.SubnetReference(\n                        ext_id=subnetUUID\n                    )\n                )\n            )\n        ],\n        disks=[\n            ntnx_vmm_py_client.AhvConfigDisk(\n                disk_address=ntnx_vmm_py_client.AhvConfigDiskAddress(\n                    bus_type=ntnx_vmm_py_client.AhvConfigDiskBusType.SCSI,\n                    index=0\n                ),\n                backing_info=ntnx_vmm_py_client.AhvConfigVmDisk(\n                    disk_size_bytes=42949672960,\n                    data_source=ntnx_vmm_py_client.DataSource(\n                        reference=ntnx_vmm_py_client.ImageReference(\n                                image_ext_id=imageUUID\n                            )\n                        )\n                    )\n                )\n            ]\n        )\n\n    try:\n        api_response = vm_api.create_vm(body=vm)\n    except ntnx_vmm_py_client.rest.ApiException as e:\n        err=json.loads(e.body)\n        print(err['data']['error']['validationErrorMessages'][0]['message'])\n\n    print(\"VM %s created\" % elt['name'])\n\n    # We change VM Project\n    \n    # Get VM ID\n    response.data=None\n\n    while not response.data:\n        response = vm_api.list_vms(_filter=\"name eq '\"+elt['name']+\"'\")\n    \n        # Sleep\n        time.sleep(10)\n\n\n    vmId= response.data[0].ext_id\n    print(\" - VM ID: %s\" % vmId)\n\n    # Now we change the project\n    # Not found in v4 API, Will be evailable in v4 GA\n    url = \"https:\/\/%s:9440\/api\/nutanix\/v3\/vms\/%s\" % (pc_ip, vmId)\n    \n    response=requests.get(url, headers=headers, verify=False, auth=(pc_user, pc_pwd))\n    VMInfo = json.loads(response.content)\n\n    # We clean VM status\n    del VMInfo['status']\n\n    # We change Project\n    VMInfo['metadata']['project_reference'] = {\n        \"kind\": \"project\", \n        \"name\": project_name, \n        \"uuid\": projectUUID\n        }\n    \n    #We powerOn th e VM\n    VMInfo['spec']['resources']['power_state']='ON'\n\n    # We apply the changes\n    url = \"https:\/\/%s:9440\/api\/nutanix\/v3\/vms\/%s\" % (pc_ip, vmId)\n    response=requests.put(url, json=VMInfo, headers=headers, verify=False, auth=(pc_user, pc_pwd))\n    \n    if( response.status_code == 202):\n        print(\" - Ownsership changed and VM powered ON\")\n    else:\n        print(\" - Error changing VM ownership ans startup\")\n\n\nexit(0)\n\nEOF","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Launch Inventory","description":"","attrs":{"type":"","script":"#!\/bin\/bash \n\ncd ~\/.calm\n\nsource venv\/bin\/activate\n\npython <<EOF\n\nimport ntnx_lifecycle_py_client\n\npc_ip=\"@@{PC_IP}@@\"\npc_user=\"@@{PC_USERNAME}@@\"\npc_pwd=\"@@{PC_PASSWORD}@@\"\n\n# Configure the client\nconfig = ntnx_lifecycle_py_client.Configuration()\n\n# IPv4\/IPv6 address or FQDN of the cluster\nconfig.host = pc_ip\n# Port to which to connect to\nconfig.port = 9440\n# Max retry attempts while reconnecting on a loss of connection\nconfig.max_retry_attempts = 3\n# Backoff factor to use during retry attempts\nconfig.backoff_factor = 3\n# UserName to connect to the cluster\nconfig.username = pc_user\n# Password to connect to the cluster\nconfig.password = pc_pwd\nconfig.verify_ssl = False\n\n\n# Please add authorization information here if needed.\nclient = ntnx_lifecycle_py_client.ApiClient(configuration=config)\ninventory_api = ntnx_lifecycle_py_client.InventoryApi(api_client=client)\n\ntry:\n    api_response = inventory_api.perform_inventory()\nexcept ntnx_lifecycle_py_client.rest.ApiException as e:\n    print(e)\n\nEOF","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Create Jumphost","description":"","attrs":{"type":"","script":"#script\n\nimport requests\nimport uuid\n\npc_ip = \"@@{PC_IP}@@\"\npc_user = \"@@{PC_USERNAME}@@\"\npc_password = \"@@{PC_PASSWORD}@@\"\nendpoint_ip = \"@@{VM.address}@@\"\nendpoint_user = '@@{NUTANIX.username}@@'\nendpoint_password = \"@@{NUTANIX.secret}@@\"\nproject_name = \"production\"\ncred_uuid=uuid.uuid4()\ncred_name= \"endpoint_cred_game\"+str(cred_uuid)[0:3]\nendpoint_name = \"jumphost\"\nprojectUUID = \"@@{ProjectUUID}@@\"\n\n# We create endpoint\n\npayload = {\n    \"api_version\": \"3.0\",\n    \"spec\":\n        {\n            \"resources\":\n                {\n                    \"type\":\"Linux\",\n                    \"value_type\":\"IP\",\n                    \"attrs\":\n                        {\n                            \"credential_definition_list\":\n                                [\n                                    {\n                                        \"description\":\"\",\n                                        \"username\": endpoint_user,\n                                        \"type\":\"PASSWORD\",\n                                        \"name\":cred_name,\n                                        \"cred_class\":\"static\",\n                                        \"secret\":\n                                            {\n                                                \"attrs\":\n                                                    {\n                                                        \"is_secret_modified\":True\n                                                    },\n                                                \"value\": endpoint_password\n                                            },\n                                        \"uuid\":str(cred_uuid)\n                                    }\n                                ],\n                        \"login_credential_reference\":\n                            {\n                                \"name\": cred_name,\n                                \"kind\":\"app_credential\",\n                                \"uuid\": str(cred_uuid)\n                            },\n                            \"values\":\n                                [\n                                    endpoint_ip\n                                ],\n                            \"port\":22,\n                        }\n                },\n            \"name\": endpoint_name\n        },\n    \"metadata\":\n        {\n            \"project_reference\":\n                {\n                    \"name\":project_name,\n                    \"kind\":\"project\",\n                    \"uuid\": str(projectUUID)\n                },\n            \"kind\":\"endpoint\"\n        }\n    }\n\nurl=\"https:\/\/%s:9440\/api\/nutanix\/v3\/endpoints\" % pc_ip\nheaders = {\n  \"Content-Type\": \"application\/json\",\n  \"Accept\": \"application\/json\"\n}\nresponse = requests.request(\"POST\", url, json=payload, headers=headers, verify=False, auth=(pc_user, pc_password))\nprint(response)","script_type":"static_py3","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Push BP on Calm","description":"","attrs":{"type":"","script":"#!\/bin\/bash\n\n# CloneProd BP\n\n#BPURL=\"https:\/\/github.com\/Golgautier\/sharing\/raw\/refs\/heads\/main\/BP_EG\/CloneProd.tgz\"\nBPURL=\"$HOME\/ntnx-escape-game\/blueprint\/CloneProd.tgz\"\nBPNAME=CloneProd\n\ncd dockervolume\n\n# Download bp from Github\ncp $BPURL CloneProd.tgz\nmd5sum CloneProd.tgz\n\n# Upadte values\ntar xvzf CloneProd.tgz\n\nsed -i s\/{PC_IP}\/@@{PC_IP}@@\/ CloneProd\/blueprint.py\nsed -i s\/{PC_USER}\/@@{PC_USERNAME}@@\/ CloneProd\/blueprint.py\nsed -i s\/{PC_PWD}\/@@{PC_PASSWORD}@@\/ CloneProd\/blueprint.py\nsed -i s\/{PROJECT}\/production\/ CloneProd\/blueprint.py\n\n# Push it into Calm\nsudo docker run -v \/home\/nutanix\/dockervolume:\/root\/.calm @@{DockerRegistry}@@\/ntnx\/calm-dsl calm create bp -f \/root\/.calm\/CloneProd\/blueprint.py -n $BPNAME\n\n# BlankVM\n\nBPURL=\"$HOME\/ntnx-escape-game\/blueprint\/NewblankVM.tgz\"\nBPNAME=BlankVM-source\n\n# Download bp from Github\ncp $BPURL NewblankVM.tgz\nmd5sum NewblankVM.tgz\n\n# Upadte values\ntar xvzf NewblankVM.tgz\n\nsed -i s\/{CLUSTER_NAME}\/@@{CLUSTERNAME}@@\/ NewblankVM\/blueprint.py\nsed -i s\/{PROJECT}\/production\/ NewblankVM\/blueprint.py\n\n# Push it into Calm\nsudo docker run -v \/home\/nutanix\/dockervolume:\/root\/.calm @@{DockerRegistry}@@\/ntnx\/calm-dsl calm create bp -f \/root\/.calm\/NewblankVM\/blueprint.py -n $BPNAME\n","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Create Subnet TestNetwork","description":"","attrs":{"type":"","script":"#!\/bin\/bash \n\ncd ~\/.calm\n\nsource venv\/bin\/activate\n\npython <<EOF\nimport ntnx_networking_py_client\nfrom jsonpath_ng.ext import parse\nimport requests\n\npc_ip=\"@@{PC_IP}@@\"\npc_user=\"@@{PC_USERNAME}@@\"\npc_pwd=\"@@{PC_PASSWORD}@@\"\nsubnetName=\"TestNetwork\"\n\n\nurl=\"https:\/\/%s:9440\/api\/nutanix\/v3\/clusters\/list\" % pc_ip\n\nheaders = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\"\n}\n\npayload = {\n    \"kind\": \"cluster\"\n    }\n\nresponse = requests.post(url, json=payload, headers=headers, verify=False, auth=(pc_user, pc_pwd))\nresponse_data = response.json()\n\njsonpath_expr = parse('$.entities[?(@.spec.name!=\"Unnamed\")].metadata.uuid')\n\nfor match in jsonpath_expr.find(response_data):\n    clusterUUID= match.value\n\n\n# Configure the client\nconfig = ntnx_networking_py_client.Configuration()\nconfig.host = pc_ip\nconfig.port = 9440\nconfig.max_retry_attempts = 3\nconfig.backoff_factor = 3\nconfig.username = pc_user\nconfig.password = pc_pwd\nconfig.verify_ssl = False\n\nclient = ntnx_networking_py_client.ApiClient(configuration=config)\nsubnets_api = ntnx_networking_py_client.SubnetsApi(api_client=client)\nsubnet = ntnx_networking_py_client.Subnet(\n    name=subnetName,\n    subnet_type = ntnx_networking_py_client.SubnetType.VLAN,\n    network_id = 1,\n    is_advanced_networking=True,\n    cluster_reference=clusterUUID,\n    is_external=True,\n    is_nat_enabled=False,\n    ip_prefix=\"192.168.1.0\/25\",\n    ip_config=\n        [\n            ntnx_networking_py_client.IPConfig(\n            ipv4=ntnx_networking_py_client.IPv4Config(\n                ip_subnet=ntnx_networking_py_client.IPv4Subnet(\n                    ip=ntnx_networking_py_client.IPv4Address(\"192.168.1.0\"),\n                    prefix_length=24\n                ),\n                default_gateway_ip=ntnx_networking_py_client.IPv4Address(\"192.168.1.1\"),\n                pool_list= [\n                    ntnx_networking_py_client.IPv4Pool(\n                        start_ip=ntnx_networking_py_client.IPv4Address(\"192.168.1.2\"),\n                        end_ip=ntnx_networking_py_client.IPv4Address(\"192.168.1.250\")\n                    )\n                ],\n            )\n        )\n    ],\n)\n\n\ntry:\n    api_response = subnets_api.create_subnet(body=subnet)\nexcept ntnx_networking_py_client.rest.ApiException as e:\n    print(e)\n\nprint(\"Done\")\nEOF","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Create fake BPs","description":"","attrs":{"type":"","script":"#!\/bin\/bash\n\nBPNAMES=(\"ApacheServer\" \"PrimaryAD\" \"Wordpress\" \"KubernetesCluster\" \"BlankVM_AnyCloud\" \"HadoopCluster\" \"RansomwareProbe\" \"EmailServer\" \"FW\" \"IPAM\" )\n\n# We gonna copy CloneProd BP to create these fake BP\ncd dockervolume\ncp -R CloneProd FakeBP\n\nfor NAME in ${BPNAMES[@]}\ndo\n    echo \"Creation of BP $NAME\"\n    # Push it into Calm\n    sudo docker run -v \/home\/nutanix\/dockervolume:\/root\/.calm @@{DockerRegistry}@@\/ntnx\/calm-dsl calm create bp -f \/root\/.calm\/FakeBP\/blueprint.py -n $NAME\ndone","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Create venv and dl modules","description":"","attrs":{"type":"","script":"#!\/bin\/bash\n\ncd ntnx-escape-game\n\npython3 -m venv .venv\n\nsource .venv\/bin\/activate\n\npip install -r requirements.txt","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Create game env file","description":"","attrs":{"type":"","script":"#!\/bin\/bash\n\ncd ntnx-escape-game\n\ncp config.env.template config.env\n\nsed -i 's\/{PC}\/@@{PC_IP}@@\/' config.env\nsed -i 's\/{PCUSER}\/@@{PC_USERNAME}@@\/' config.env\nsed -i 's={PCPASSWORD}=@@{PC_PASSWORD}@@=' config.env\nsed -i 's={IMAGEURL}=https:\/\/cloud-images.ubuntu.com\/daily\/server\/jammy\/current\/jammy-server-cloudimg-amd64.img=' config.env\nsed -i 's\/{PRODUSERNAME}\/thebadguy\/' config.env\nsed -i 's\/{PRODPASSWORD}\/MyPassword4Prod!\/' config.env\nsed -i 's\/{OLDPC}\/@@{OLDPC}@@\/' config.env\nsed -i 's\/{OLDPCUSERNAME}\/@@{OLDPC_USER}@@\/' config.env\nsed -i 's\/{OLDPCPASSWORD}\/@@{PLANNER_PASSWORD}@@\/' config.env\nsed -i 's\/{FRONTENDHOST}\/@@{VM.address}@@\/' config.env\nsed -i 's\/{FRONTENDPORT}\/8080\/' config.env\nsed -i 's\/{APPROVALPOLICY}\/SecureSnaps\/' config.env\nsed -i 's\/{EMAILREPORT}\/noreply@supco.com\/' config.env\nsed -i 's\/{HOSTSSHUSERNAME}\/@@{NUTANIX.username}@@\/' config.env\nsed -i 's={HOSTSSHPASSWORD}=@@{NUTANIX.secret}@@=' config.env\nsed -i 's\/{PLAYERSSHUSERNAME}\/@@{PLAYER.username}@@\/' config.env\nsed -i 's={PLAYERSSHPASSWORD}=@@{PLAYER.secret}@@=' config.env\nsed -i 's={DOCKERREGISTRY}=@@{DockerRegistry}@@=' config.env","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Initialize game","description":"","attrs":{"type":"","script":"#!\/bin\/bash -x\n\n# This script will update some patterns in email and conf file regarding the configuration.\n# - {LISTEN_IP} in htlm files, and email templates\n# - {PASSWORD} in the email templates\n# - {CLUSTER} in the email template\n# - {PARALLEL_URL} in the email templates\n# - {SENDER_EMAIL} in the mail.py file\n#\n# and create sendgrid.env with good token\n\ncd ntnx-escape-game \n\nsource .venv\/bin\/activate\n\n# Prepare ssh fronted\nsed -i \"s\/{LISTEN_IP}\/@@{VM.address}@@\/\" frontend\/templates\/*.html\n\n# Create services\nsed -i \"s\/{LISTEN_IP}\/@@{VM.address}@@\/\" daemons\/eg-sshserver.service\nsudo cp daemons\/eg* \/etc\/systemd\/system\/\n\n# Update email templates\nsed -i \"s\/{LISTEN_IP}\/@@{VM.address}@@\/\" email_templates\/*\n\n# Update email templates\nsed -i \"s\/{PASSWORD}\/@@{PC_PASSWORD}@@\/\" email_templates\/*\n\n# Define VDI parrallel url\nSITE=`echo \"@@{CLUSTERNAME}@@\" | cut -c1-3 | tr A-Z a-z`\n\nPARALLEL_URL=\"https:\/\/${SITE}-ras.xlabs.nutanix.com\"\n\n# Update email templates\n\nsed -i \"s#{PARALLEL_URL}#$PARALLEL_URL#\" email_templates\/*\nsed -i \"s#{CLUSTER}#@@{CLUSTERNAME}@@#\" email_templates\/*\n\n# Update mail.py file\nsed -i \"s#{MAIL_TOKEN}#@@{EMAILTOKEN}@@#\" mail.py\n\nsudo systemctl daemon-reload\n\n# 'Clean' the game\npython3 main.py -clean","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"SET_VARIABLE","name":"Get emails list","description":"","attrs":{"type":"","script":"#!\/bin\/bash\n\ncd ntnx-escape-game\/email_templates\n\nFILES=$(ls -1 | paste -sd, -)\n\necho \"TEMPLATES=$FILES\"\n","script_type":"sh","exit_status":[],"eval_scope":"local","eval_variables":["TEMPLATES"]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]}],"main_task_local_reference":{"name":"f60f19f1_dag","kind":"app_task"},"variable_list":[]},"uninstall_runbook":{"name":"136b6911_runbook","description":"","task_definition_list":[{"type":"DAG","name":"b1dbc7fe_dag","description":"","attrs":{"type":"","edges":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Create Game Content","kind":"app_package"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]}],"main_task_local_reference":{"name":"b1dbc7fe_dag","kind":"app_task"},"variable_list":[]},"upgrade_runbook":{}}}],"app_profile_list":[{"name":"Default","description":"","variable_list":[{"type":"LOCAL","name":"GIT_BRANCH","description":"","options":{"type":"PREDEFINED","choices":[]},"is_hidden":false,"is_mandatory":false,"data_type":"BASE","val_type":"STRING","label":"Git Branch","attrs":{"type":""},"editables":{"value":true},"value":"main"},{"type":"LOCAL","name":"GIT_URL","description":"","options":{"type":"PREDEFINED","choices":[]},"is_hidden":false,"is_mandatory":false,"data_type":"BASE","val_type":"STRING","label":"Git Escape Game URL","attrs":{"type":""},"editables":{"value":true},"value":"https:\/\/github.com\/Golgautier\/ntnx-escape-game.git"},{"type":"LOCAL","name":"CLUSTERNAME","description":"","options":{"type":"PREDEFINED","choices":[]},"is_hidden":true,"is_mandatory":false,"data_type":"BASE","val_type":"STRING","label":"","attrs":{"type":""},"editables":{"value":false},"value":""},{"type":"LOCAL","name":"DockerRegistry","description":"Registry path, without end \/","options":{"type":"PREDEFINED","choices":[]},"is_hidden":true,"is_mandatory":false,"data_type":"BASE","val_type":"STRING","label":"","attrs":{"type":""},"editables":{"value":false},"value":"registry.nutanixdemo.com\/docker.io"},{"type":"SECRET","name":"TOKEN","description":"","options":{"type":"PREDEFINED","choices":[]},"is_hidden":false,"is_mandatory":false,"data_type":"BASE","val_type":"STRING","label":"","attrs":{"type":"SECRET","is_secret_modified":false,"secret_reference":{}},"value":""},{"type":"SECRET","name":"EMAILTOKEN","description":"Please ask Gautier for it","options":{"type":"PREDEFINED","choices":[]},"is_hidden":false,"is_mandatory":true,"data_type":"BASE","val_type":"STRING","label":"Token for Mailtrap","attrs":{"type":"SECRET","is_secret_modified":false,"secret_reference":{}},"editables":{"value":true},"value":""},{"type":"SECRET","name":"PLANNER_PASSWORD","description":"Ask Gautier to get it","options":{"type":"PREDEFINED","choices":[]},"is_hidden":false,"is_mandatory":false,"data_type":"BASE","val_type":"STRING","label":"Password for user 'Planner'","attrs":{"type":"SECRET","is_secret_modified":false,"secret_reference":{}},"editables":{"value":true},"value":""},{"type":"SECRET","name":"PC_PASSWORD","description":"","options":{"type":"PREDEFINED","choices":[]},"is_hidden":false,"is_mandatory":true,"data_type":"BASE","val_type":"STRING","label":"Prism Central Admin Password","attrs":{"type":"SECRET","is_secret_modified":false,"secret_reference":{}},"editables":{"value":true},"value":""},{"type":"LOCAL","name":"PC_USERNAME","description":"","options":{"type":"PREDEFINED","choices":[]},"is_hidden":false,"is_mandatory":false,"data_type":"BASE","val_type":"STRING","label":"Prism Central Admin user","attrs":{"type":""},"editables":{"value":true},"value":""},{"type":"LOCAL","name":"PC_IP","description":"","options":{"type":"PREDEFINED","choices":[]},"is_hidden":false,"is_mandatory":false,"data_type":"BASE","val_type":"STRING","label":"Prism Central IP","attrs":{"type":""},"editables":{"value":true},"value":""},{"type":"LOCAL","name":"OLDPC","description":"","options":{"type":"PREDEFINED","choices":[]},"is_hidden":true,"is_mandatory":false,"data_type":"BASE","val_type":"STRING","label":"","attrs":{"type":""},"editables":{"value":false},"value":"10.55.82.39"},{"type":"LOCAL","name":"OLDPC_USER","description":"","options":{"type":"PREDEFINED","choices":[]},"is_hidden":true,"is_mandatory":false,"data_type":"BASE","val_type":"STRING","label":"","attrs":{"type":""},"editables":{"value":false},"value":"planner"},{"type":"LOCAL","name":"TIMEZONE","description":"Will be used on the scoreboard","regex":{"value":"^.*$","should_validate":false},"options":{"type":"PREDEFINED","choices":["UTC","Europe\/Paris","Europe\/London","America\/New_York","America\/Los_Angeles","America\/Sao_Paulo","Asia\/Dubai","Asia\/Tokyo","Australia\/Sydney"]},"is_hidden":false,"is_mandatory":true,"data_type":"BASE","val_type":"STRING","label":"Time Zone","attrs":{"type":"LOCAL"},"editables":{"value":true},"value":"UTC"}],"action_list":[{"type":"user","name":"OnDemand _ Restart servers","description":"","runbook":{"name":"f5cbd168_runbook","description":"","task_definition_list":[{"type":"DAG","name":"59cc092f_dag","description":"","attrs":{"type":"","edges":[{"type":"","from_task_reference":{"name":"Start Dashboard","kind":"app_task"},"to_task_reference":{"name":"Start WSSH","kind":"app_task"},"edge_type":"user_defined"}]},"child_tasks_local_reference_list":[{"name":"Start Dashboard","kind":"app_task"},{"name":"Start WSSH","kind":"app_task"}],"variable_list":[],"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Start Dashboard","description":"","attrs":{"type":"","script":"#!\/bin\/bash\n\nsudo systemctl status eg-dashboard.service\nsudo systemctl restart eg-dashboard.service","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Start WSSH","description":"","attrs":{"type":"","script":"#!\/bin\/bash\n\nsudo systemctl status eg-sshserver.service\nsudo systemctl restart eg-sshserver.service","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]}],"main_task_local_reference":{"name":"59cc092f_dag","kind":"app_task"},"variable_list":[]},"critical":false},{"type":"user","name":"1 _ Send invitation email","description":"","runbook":{"name":"f57c0371_runbook","description":"","task_definition_list":[{"type":"DAG","name":"c1f17369_dag","description":"","attrs":{"type":"","edges":[{"type":"","from_task_reference":{"name":"Send email","kind":"app_task"},"to_task_reference":{"name":"Set variable RECIPIENTS_LIST","kind":"app_task"},"edge_type":"user_defined"}]},"child_tasks_local_reference_list":[{"name":"Send email","kind":"app_task"},{"name":"Set variable RECIPIENTS_LIST","kind":"app_task"}],"variable_list":[],"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Send email","description":"","attrs":{"type":"","script":"#!\/bin\/bash\n\ncd ntnx-escape-game\nsource .venv\/bin\/activate\n\nexport I=0\n\nfor EMAIL in `echo @@{RECIPIENTS}@@ | sed 's\/,\/ \/g'`\ndo\n    I=$(($I+1))\n    echo \"Emailing to $EMAIL, id $I\"\n    python mail.py $EMAIL \"I need help right now!\" @@{Template}@@ $I\ndone\n\necho \"Done\"","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"SET_VARIABLE","name":"Set variable RECIPIENTS_LIST","description":"","attrs":{"type":"","script":"#script\n\nprint(\"RECIPIENTS_LIST=@@{RECIPIENTS}@@\")","script_type":"static_py3","exit_status":[],"eval_scope":"local","eval_variables":["RECIPIENTS_LIST"]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]}],"main_task_local_reference":{"name":"c1f17369_dag","kind":"app_task"},"variable_list":[{"type":"EXEC_LOCAL","name":"Template","description":"","options":{"type":"EXEC","attrs":{"type":"EXEC","script":"#script\n\ntemplist = \"@@{Game.TEMPLATES}@@\"\nlookingFor = \"start\"\n\n# D\u00e9couper la cha\u00eene en \u00e9l\u00e9ments (ici, s\u00e9par\u00e9s par une virgule et un espace)\nelements = [elem.strip() for elem in templist.split(',')]\n\n# Filtrer les \u00e9l\u00e9ments contenant 'summary'\ngoodElements = [elem for elem in elements if lookingFor in elem]\n\n# Afficher les \u00e9l\u00e9ments filtr\u00e9s, s\u00e9par\u00e9s par une virgule\nprint(', '.join(goodElements))","script_type":"static_py3","command_line_args":"","exit_status":[]}},"is_hidden":false,"is_mandatory":false,"data_type":"BASE","val_type":"STRING","label":"","attrs":{"type":"LOCAL"},"editables":{"value":true},"value":""},{"type":"LOCAL","name":"RECIPIENTS","description":"Use only email addresses, with coma as separator","options":{"type":"PREDEFINED","choices":[]},"is_hidden":false,"is_mandatory":false,"data_type":"BASE","val_type":"STRING","label":"Recipients","attrs":{"type":""},"editables":{"value":true},"value":""}]},"critical":false},{"type":"user","name":"2 _ Send summary email","description":"","runbook":{"name":"f57c0371_runbook_cloned_0","description":"","task_definition_list":[{"type":"DAG","name":"c1f17369_dag_cloned_1","description":"","attrs":{"type":"","edges":[]},"child_tasks_local_reference_list":[{"name":"Send summary","kind":"app_task"}],"variable_list":[],"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Send summary","description":"","attrs":{"type":"","script":"#!\/bin\/bash\n\ncd ntnx-escape-game\nsource .venv\/bin\/activate\n\n\nfor EMAIL in `echo @@{Game.RECIPIENTS_LIST}@@ | sed 's\/,\/ \/g'`\ndo\n    echo \"Emailing to $EMAIL\"\n    python mail.py $EMAIL \"Thank you for playing!\" @@{Template}@@\ndone\n\necho \"Done\"","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]}],"main_task_local_reference":{"name":"c1f17369_dag_cloned_1","kind":"app_task"},"variable_list":[{"type":"EXEC_LOCAL","name":"Template","description":"","options":{"type":"EXEC","attrs":{"type":"EXEC","script":"#script\n\ntemplist = \"@@{Game.TEMPLATES}@@\"\nlookingFor = \"summary\"\n\n# D\u00e9couper la cha\u00eene en \u00e9l\u00e9ments (ici, s\u00e9par\u00e9s par une virgule et un espace)\nelements = [elem.strip() for elem in templist.split(',')]\n\n# Filtrer les \u00e9l\u00e9ments contenant 'summary'\ngoodElements = [elem for elem in elements if lookingFor in elem]\n\n# Afficher les \u00e9l\u00e9ments filtr\u00e9s, s\u00e9par\u00e9s par une virgule\nprint(', '.join(goodElements))","script_type":"static_py3","command_line_args":"","exit_status":[]}},"is_hidden":false,"is_mandatory":false,"data_type":"BASE","val_type":"STRING","label":"","attrs":{"type":"LOCAL"},"editables":{"value":true},"value":""}]},"critical":false},{"type":"user","name":"OnDemand _ Change user stage","description":"Force user stage change","runbook":{"name":"e5215f96_runbook","description":"","task_definition_list":[{"type":"DAG","name":"9715c2c3_dag","description":"","attrs":{"type":"","edges":[]},"child_tasks_local_reference_list":[{"name":"Change stage","kind":"app_task"}],"variable_list":[],"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"Change stage","description":"","attrs":{"type":"","script":"#!\/bin\/bash\n\ncd ntnx-escape-game\nsource .venv\/bin\/activate\n\npython main.py -changeStage @@{Trigram}@@ @@{NewStage}@@","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]}],"main_task_local_reference":{"name":"9715c2c3_dag","kind":"app_task"},"variable_list":[{"type":"LOCAL","name":"NewStage","description":"","regex":{"value":"^[\\d]*$","should_validate":false},"options":{"type":"PREDEFINED","choices":[]},"is_hidden":false,"is_mandatory":true,"data_type":"BASE","val_type":"INT","label":"New stage","attrs":{"type":""},"editables":{"value":true},"value":""},{"type":"LOCAL","name":"Trigram","description":"","options":{"type":"PREDEFINED","choices":[]},"is_hidden":false,"is_mandatory":true,"data_type":"BASE","val_type":"STRING","label":"","attrs":{"type":""},"editables":{"value":true},"value":""}]},"critical":false},{"type":"user","name":"OnDemand _ Update game","description":"pull modifications from git repo","runbook":{"name":"6e5f1e20_runbook","description":"","task_definition_list":[{"type":"DAG","name":"6ae14b42_dag","description":"","attrs":{"type":"","edges":[]},"child_tasks_local_reference_list":[{"name":"git pull","kind":"app_task"}],"variable_list":[],"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"EXEC","name":"git pull","description":"","attrs":{"type":"","script":"#!\/bin\/bash\nset -euo pipefail\n\ncd ntnx-escape-game\n\ngit pull --rebase --autostash\n\necho \"Done\"","script_type":"sh","command_line_args":"","exit_status":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]}],"main_task_local_reference":{"name":"6ae14b42_dag","kind":"app_task"},"variable_list":[]},"critical":false}],"deployment_create_list":[{"type":"GREENFIELD","name":"deployment_e777f451","description":"","variable_list":[],"action_list":[],"depends_on_list":[],"min_replicas":"1","max_replicas":"1","default_replicas":"1","package_local_reference_list":[{"name":"Create Game Content","kind":"app_package"}],"substrate_local_reference":{"name":"VM","kind":"app_substrate"},"published_service_local_reference_list":[]}],"snapshot_config_list":[],"restore_config_list":[],"environment_reference_list":[],"application_url":"","patch_list":[{"type":"PATCH","name":"Config1","description":"","runbook":{"name":"SYS_GEN__Runbook_Patch_Config1_ae546ab5_0dbb_d856_a2fa_3a9b5429d54c","description":"","task_definition_list":[{"type":"DAG","name":"SYS_GEN__DAG_Patch_Config1_ae546ab5_0dbb_d856_a2fa_3a9b5429d54c","description":"","attrs":{"type":"DAG","edges":[]},"child_tasks_local_reference_list":[{"name":"Config1_meta_task","kind":"app_task"}],"variable_list":[],"target_any_local_reference":{"name":"Default","kind":"app_profile"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"PATCH_META","name":"Config1_meta_task","description":"","attrs":{"type":"","patch_attrs_reference":[]},"child_tasks_local_reference_list":[{"name":"Config1_update_spec_task","kind":"app_task"},{"name":"Config1_Game","kind":"app_task"}],"variable_list":[],"target_any_local_reference":{"name":"Default","kind":"app_profile"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"UPDATE_SPEC","name":"Config1_update_spec_task","description":"","attrs":{"type":""},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Default","kind":"app_profile"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"FOR_LOOP","name":"Config1_Game","description":"","attrs":{"type":"","loop_over_list":"","exit_condition_type":"","loop_variable":"","loop_counter":"","patch_attr_reference":"64229b11-309c-026f-7bbb-adcc62ac0915"},"child_tasks_local_reference_list":[{"name":"SYS_GEN__stop","kind":"app_task"},{"name":"SYS_GEN__Nutanix_Update_f9257274_1653_4959_943f_491cf7a562cd","kind":"app_task"},{"name":"SYS_GEN__start","kind":"app_task"}],"variable_list":[],"target_any_local_reference":{"name":"deployment_e777f451","kind":"app_blueprint_deployment"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"CALL_RUNBOOK","name":"SYS_GEN__stop","description":"","attrs":{"type":"CALL_RUNBOOK","runbook_reference":{"name":"ef0c4356_runbook","kind":"app_runbook"},"inarg_list":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"UPDATE_NUTANIX","name":"SYS_GEN__Nutanix_Update_f9257274_1653_4959_943f_491cf7a562cd","description":"","attrs":{"type":""},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"VM","kind":"app_substrate"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]},{"type":"CALL_RUNBOOK","name":"SYS_GEN__start","description":"","attrs":{"type":"CALL_RUNBOOK","runbook_reference":{"name":"b0ce5efb_runbook","kind":"app_runbook"},"inarg_list":[]},"child_tasks_local_reference_list":[],"variable_list":[],"target_any_local_reference":{"name":"Game","kind":"app_service"},"timeout_secs":"0","retries":"0","inherit_target":false,"status_map_list":[]}],"main_task_local_reference":{"name":"SYS_GEN__DAG_Patch_Config1_ae546ab5_0dbb_d856_a2fa_3a9b5429d54c","kind":"app_task"},"variable_list":[]},"attrs_list":[{"target_any_local_reference":{"name":"deployment_e777f451","kind":"app_blueprint_deployment"},"data":{"type":"nutanix","num_vcpus_per_socket_ruleset":{"type":""},"num_sockets_ruleset":{"type":""},"memory_size_mib_ruleset":{"type":""},"disk_delete_allowed":false,"categories_delete_allowed":false,"nic_delete_allowed":false,"categories_add_allowed":false,"pre_defined_disk_list":[{"type":"","data_source_reference":{"type":"","kind":"app_package","name":"Ubuntu2404","uuid":"3a4178ad-46a9-4e48-9b4b-3d3ef21a5dfc"},"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"},"disk_size_mib":{"type":"","operation":"equal","editable":false,"value":"40960"},"operation":"modify"}],"pre_defined_categories":[{"type":"","value":"Environment:Production","operation":"modify"}],"pre_defined_nic_list":[{"type":"","nic_type":"NORMAL_NIC","subnet_reference":{"type":"","kind":"subnet","name":"","uuid":"9905e25d-1b7e-4f3c-91fa-e1fc96280874"},"network_function_nic_type":"INGRESS","mac_address":"","ip_endpoint_list":[],"network_function_chain_reference":null,"vpc_reference":null,"operation":"modify","identifier":"0","editable":false}]},"deployment_strategy":{"type":""},"uuid":"64229b11-309c-026f-7bbb-adcc62ac0915"}],"variable_list":[],"config_reference_list":[],"is_system_generated":false}]}],"credential_definition_list":[{"type":"PASSWORD","name":"NUTANIX","description":"","username":"nutanix","secret":{"attrs":{"secret_reference":{},"is_secret_modified":false}},"cred_class":"static"},{"type":"PASSWORD","name":"PLAYER","description":"","username":"player","secret":{"attrs":{"secret_reference":{},"is_secret_modified":false}},"cred_class":"static"}],"default_credential_local_reference":{"name":"NUTANIX","kind":"app_credential"},"type":"USER","client_attrs":{"deployment_e777f451":{"x":-352.0869643184469,"y":-16245.08288715308}}}},"api_version":"3.0","product_version":"4.1.1","metadata":{"last_update_time":"1756046897780323","creation_time":"1755959462165865","spec_version":8,"name":"EG-EscapeGame","kind":"blueprint"},"contains_secrets":false}